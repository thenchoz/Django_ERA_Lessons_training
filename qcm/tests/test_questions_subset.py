"""
Django tests for questions_subset in qcm app.

Generated by 'manage.py startapp' using Django 3.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/testing/
"""

from django.test import TestCase

from ..models import QuestionsSubset
from .test_shortcuts import create_questions_subset, create_random_questions


class QuestionsSubsetModelTest(TestCase):
    """class to test the Questions subset model"""

    def test_create_questions_subset(self):
        """test a question subset creation"""
        name = "empty questions subset"
        questions_subset = create_questions_subset(questions_subset_name=name)
        questions_subsets = QuestionsSubset.objects.all()
        self.assertQuerysetEqual(questions_subsets, [questions_subset])

    def test_get_questions_shuffled_is_complete_and_unique(self):
        """test fct QuestionsSubset::get_questions_shuffled
        test if all questions are in queryset
        test if queryset is the same size as all question
        test if not equal base list
        """
        questions_subset = create_questions_subset(
            questions_subset_name="questions shuffled"
        )

        questions = create_random_questions(questions_subset)
        questions_shuffled = questions_subset.get_questions_shuffled()

        # test for all question in queryset
        self.assertEqual(len(questions_shuffled), len(questions))
        for question in questions:
            self.assertTrue(question in questions_shuffled)
        self.assertNotEqual(questions, questions_shuffled)
